<#+
//
void MakeRepoIdentity(Table tbl)
{
#>
using System;
using System.Collections.Generic;
using System.Linq;
using NPoco;
using <#=ApplicationName #>.Models;

namespace <#=RepositoryNamespace #>
{ 
	public class <#= tbl.RepoName #> : Repositories.Core.IIdentityRepository<<#= tbl.ClassName #>>
	{
		private NPoco.Database db = new NPoco.Database(Services.AppSettings.ConnectionString, DatabaseType.SqlServer2008) { Mapper = new Core.CustomTypeMapper() };

		public <#= tbl.PK[0].PropertyType #> Save(<#= tbl.ClassName #> entity)
		{
			db.Save<<#= tbl.ClassName #>>(entity);
			return entity.<#= tbl.PK[0].PropertyName #>;
		}

		public bool Save(IEnumerable<<#= tbl.ClassName #>> items)
		{
			foreach (<#= tbl.ClassName #> item in items)
			{
				db.Save<<#= tbl.ClassName #>>(item);
			}
			return true;
		}

		public bool Delete(int id)
		{
			db.Delete<<#= tbl.ClassName #>>(id);
			return true;
		}

		public bool Delete(IEnumerable<int> ids)
		{
			foreach (int id in ids)
			{
				db.Delete<<#= tbl.ClassName #>>(id);
			}
			return true;
		}

		public bool Destroy(int id)
		{
			db.Delete<<#= tbl.ClassName #>>(id);
			return true;
		}


		public <#= tbl.ClassName #> FindBy(<#= tbl.PK[0].PropertyType #> id)
		{
			return db.SingleOrDefaultById<<#= tbl.ClassName #>>(id);
		}

		public IEnumerable<<#= tbl.ClassName #>> All()
		{
			return db.Fetch<<#= tbl.ClassName #>>(" ");
		}


		public void ReseedKey()
		{
			string sql ="DECLARE @@MaxId int; ";
			sql += "SELECT @@MaxId = MAX(<#= tbl.PK[0].Name #>) FROM <#= tbl.Name #>; ";
			sql += "DBCC CHECKIDENT ('<#= tbl.Name #>', RESEED, @@MaxId) WITH NO_INFOMSGS;";
			
			db.Execute(sql);
		}

	}
}	

<#+

	SaveOutput(GetEntityFullPath(tbl, EntityType.RepoRw));

} // End Function
#>
